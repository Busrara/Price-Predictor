import requests
from bs4 import BeautifulSoup
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# 1. Web scraping

def scrape_data(url):
  response=requests.get(url)
  soup=BeautifulSoup(response.text, "html.parser")

  products=[item.text for item in soup.select(".product-title")]
  prices=[float(item.text.strip('$')) for item in soup.select(".product-price")]
  return pd.DataFrame({'Product': products, 'Price': prices})

# URL entrance

url= ""
data= scrape_data(url)

# 2. Analyzing the data

data['Length']= data['Product'].apply(len)
X=data[['Length']]
y=data['Price']

X_train, X_test, y_train, y_test=train_test_split(X,y, test_size=0.2, random_state=42)
model= LinearRegression()
model.fit(X_train, y_train)

y_pred=model.predict(X_test)
print(f"Mean squared error: {mean_squared_error(y_test, y_pred):.2f}")

new_product={'Length': [10]}  
predicted_price=model.predict(pd.DataFrame(new_product))
print(f"Predicted price for the new product: ${predicted_price[0]:.2f}")
